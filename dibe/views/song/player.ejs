<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DIBE <%- song.title %> - <%- song.artist %></title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta2/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="/stylesheets/main.css">
    <link rel="stylesheet" href="/stylesheets/loader.css">
    <link rel="shortcut icon" href="https://i1.sndcdn.com/avatars-000606604806-j6ghpm-t500x500.jpg" />
</head>
<body>
    <div style="width: 1000px;">
		<div class="loader" style="display: none;"></div>
        <!-- modal, more_show_modal, playList, controler 인클루드 하삼 -->
        <%- include('./play-list') %>
        <%- include('../include/controler') %>
	</div>
	
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
	
	<script>
		let songUrl;
		let playerIndex = 0;
		let playerIndex_ = 0;
		let sw = 0;
		let pisw1 = 0;
		let pisw2 = 0;
		let repeat = 0;
		let shuffle = 0;
	
        // 바로 재생
        if ('<%- autoPlay %>' === '1') {
                if (sw == 0) {
                    load();
                    sw = 1;
                }
                
                $(play_btn).hide();
                $(pause_btn).show();
                player.play();
        }
        
        // 플레이 리스트 음원 삭제
        function delList(songId) {
            $(`#p_${songId}`).remove()
            $('#listCnt').html(`${$('.get-songId').length} 곡`)
        }
        
        // document.addEventListener('click', () => {
        //     $('button[name=delete_btn]').on('click', (e) => {
        //         const index = $(e.target).closest('.get-songId').index()
        //         if (playerIndex >= index) playerIndex--
                
        //         $(e.target).closest('.get-songId').remove()
        //         const cnt = $('.get-songId').length
        //         $('#listCnt').html(`${cnt} 곡`)
        //     })
        // })
        
        // 원하는 곡 재생
        function startThis(songId) {
            const rows = $('.get-songId')
            for (let i=0; i<rows.length; i++) {
                if (rows[i].id.split('_')[1] === songId) {
                    playerIndex = i;
                    load();
                    $(play_btn).hide();
                    $(pause_btn).show();
                    player.play();
                    sw = 1;
                    return
                }
            }
        }

        // 플레이 리스트에 데이터 뿌리기
        async function setList(song) {
            const rows = $('.get-songId')
            for (row of rows) {
                if (row.id.split('_')[1] === song._id) return
            }

            let res = `
                <div id="p_${song._id}" class='d-flex p-3 get-songId'>
                    <div class='imgBox mr-3'>
                        <img class="playlist_i" src='${song.img}' title="재생" onclick="startThis('${song._id}')">
                    </div>
                    <div>
                        <div class='playlist_t' title="${song.title}">`
            if (song.title.length > 13) res += `${song.title.substring(0, 14)}...`
            else res += `${song.title}`
            res += `    </div>
                        <div class='playlist_a' title="${song.artist}">`
            if (song.artist.length > 13) res += `${song.artist.substring(0, 13)}...`
            else res+= `${song.artist}`
            res += `    </div>
                    </div>
                    <div class='ml-auto'>
                        <button name='delete_btn' type='button' class='btn' onclick="delList('${song._id}')"><i title="플레이리스트에서 제거" class='fa-regular fa-trash-can'></i></button>
                    </div>
                </div>`
            
            $('#play_list').append(res)
            const cnt = $('.get-songId').length
            $('#listCnt').html(`${cnt} 곡`)
        }
        
        // 로드
        function load() {
            const getId = $('.get-songId')[playerIndex].id
            const songId = getId.split('_')[1]
            const title = $('.playlist_t')[playerIndex].title
            const artist = $('.playlist_a')[playerIndex].title
            const img = $('.playlist_i')[playerIndex].src
            // songUrl = `/songs/stream?songId=${songId}`
            songUrl = `/track/${songId}.mp4`
            
            // $.get(songUrl).fail(() => {
            //     next_btn.click();
            // });
            
            player.src = songUrl;
            player.load();
            controls_title.innerHTML = title
            if (title.length > 10) controls_title.innerHTML = `<marquee scrollamount=3>${title}</marquee>`
            controls_artist.innerHTML = artist
            controls_title.title = title
            controls_artist.title = artist
            play_listImg_img.src = img.replace("50", "400");
            play_listbg.src = img.replace("50", "2000");
            
            
            //타이틀 변경
            document.title = "DIBE " + title + " - " + artist
            
            // 현재 재생 음악 포커스
            focus_cur()
        }


        // 플레이버튼 클릭
        play_btn.addEventListener("click", () => {
            if (sw == 0) {
                load();
                sw = 1;
            }
            
            $(play_btn).hide();
            $(pause_btn).show();
            player.play();	
        });

        // 일시정지
        pause_btn.addEventListener("click", () => {
            $(play_btn).show();
            $(pause_btn).hide();
            player.pause();
        });

        //볼륨
        $("#volume_bar").on("input", () => {
            player.volume = $("#volume_bar").val() / 100;
            $("#vol_no").html($("#volume_bar").val());
            
            // $.ajax({
            //     type : "post",
            //     url : "${ctp}/song/myvol",
            //     data : {vol : player.volume}
            // });
            
        });

        // 음소거
        let temp_vol;
        $("#mute_btn1").click(() => {
            $("#player").prop("muted", true);
            $("#mute_btn1").hide();
            $("#mute_btn2").show();
        });

        $("#mute_btn2").click(() => {
            $("#player").prop("muted", false);
            $("#mute_btn2").hide();
            $("#mute_btn1").show();
        });

        // 재생바 이동
        $("#play_bar").on("input", (e) => {
            const point = $("#play_bar").val();
            const current = point * player.duration / 100
            play_bar = point;
            player.currentTime = current
        });

        //재생바
        $("#player").on("timeupdate", () => {
            let per = (player.currentTime / player.duration) * 100;
            $("#play_bar").val(per);
            
            let min_dur = 00;
            let sec_dur = 00;
            let min_cur = 00;
            let sec_cur = 00;

            if (!isNaN(player.duration)) {
                min_dur = parseInt(player.duration / 60);
                sec_dur = parseInt(player.duration % 60);
                min_cur = parseInt(player.currentTime / 60);
                sec_cur = parseInt(player.currentTime % 60);
            }

            
            if (min_dur < 10) {
                min_dur = "0" + min_dur;
            }
            if (sec_dur < 10) {
                sec_dur = "0" + sec_dur;
            }
            if (min_cur < 10) {
                min_cur = "0" + min_cur;
            }
            if (sec_cur < 10) {
                sec_cur = "0" + sec_cur;
            }

            let res = min_cur + ":" + sec_cur + " / " + min_dur + ":" + sec_dur;
            $("#controls_time").html(res);

            if ('<%- isAuthenticated %>' === 'false') {
                if (player.currentTime > 60 && player.currentTime < player.duration) {
                    player.currentTime = player.duration
                }
            }
        });

        // next button
        $("#next_btn").click(() => {
            $(play_btn).hide();
            $(pause_btn).show();
            
            playerIndex++;
            if (playerIndex >= $('.get-songId').length) {
                playerIndex = 0;
            };
            load();
            player.play();
            $("#controls_time").html("00:00 / 00:00");
        });

        // back button
        $("#back_btn").click(() => {
            $(play_btn).hide();
            $(pause_btn).show();
            
            playerIndex--;
            if (playerIndex <= 0) {
                playerIndex = 0;
            };
            load();
            player.play();
            $("#controls_time").html("00:00 / 00:00");
        });

        // 연속 재생
        $("#player").on("ended", () => {
            playerIndex++;
            if (repeat == 2) playerIndex--;
            if (playerIndex >= $('.get-songId').length) {
                $(play_btn).show();
                $(pause_btn).hide();
                playerIndex = 0;
                sw = 0;
                player.currentTime = 0;
                
                if (repeat == 1) {
                    load();
                    player.play();
                    $(play_btn).hide();
                    $(pause_btn).show();
                }
                
                return;
            }
            
            load();
            player.play();
        });

        //가사 모달
        $("#lyrics_btn").click(() => {
            modal_i.src = thum_list[playerIndex].replace("50","200");
            $("#modal_t").html($("#controls_title").html());
            $("#modal_a").html($("#controls_artist").html());
            
            // $.ajax({
            //     type : "post",
            //     url : "${ctp}/song/lyrics",
            //     data : {idx : idx_list[playerIndex]},
            //     success : (data) => {
            //         data = data.replace(/\n/g, "<br>");
            //         $("#modal_c").html(data);
            //     }
            // });
            
        });
        
        // 좋아요 버튼 이벤트
        // $("#like_btn1").click(() => {
        //     $("#like_btn1").hide();
        //     $("#like_btn2").show();
            
        //     if (${empty sMid}) return;
        //     $.ajax({
        //         type : "post",
        //         url : "${ctp}/song/like",
        //         data : {idx : idx_list[playerIndex]},
        //     });
        // }); 
        // $("#like_btn2").click(() => {
        //     $("#like_btn2").hide();
        //     $("#like_btn1").show();
            
        //     if (${empty sMid}) return;
        //     $.ajax({
        //         type : "post",
        //         url : "${ctp}/song/unlike",
        //         data : {idx : idx_list[playerIndex]},
        //     });
        // });
        
        //반복 재생 버튼
        $("#repeat_btn").click(() => {
            if (repeat == 0) {
                repeat = 1;
                repeat_btn.style.opacity = "1";
                $("#repeat_btn").prop("title", "반복재생");
            }
            
            else if (repeat == 1) {
                repeat = 2;
                $("#repeat_btn").prop("title", "한곡반복");
                $("#one_repeat_mark").show();
            }
            
            else if (repeat == 2) {
                repeat = 0;
                repeat_btn.style.opacity = "0.5";
                $("#repeat_btn").prop("title", "반복해제");
                $("#one_repeat_mark").hide();
            }
        });
        
        //셔플
        $("#shuffle_btn").click(() => {
            if ($('.get-songId').length <= 1) return;
            
            if (shuffle == 0)  {
                $('.loader').show();
                
                idx_list_ = Object.assign([], idx_list);
                thum_list_ = Object.assign([], thum_list);
                title_list_ = Object.assign([], title_list);
                artist_list_ = Object.assign([], artist_list);
                
                setTimeout(() => {
                    $.ajax({
                        type : "post",
                        url : "${ctp}/song/shuffle",
                        async : false,
                        dataType : "json",
                        contentType :   "application/x-www-form-urlencoded; charset=UTF-8",
                        data : {idxs : idx_list, curIdx : idx_list[playerIndex]},
                        success : (data) => {
                            for (let i=0; i<idx_list.length; i++) {
                                idx_list[i] = data[i].idx;
                                thum_list[i] = data[i].img;
                                title_list[i] = data[i].title;
                                artist_list[i] = data[i].artist;
                            }
                            
                            playerIndex = idx_list.indexOf(idx_list_[playerIndex]);

                            shuffle_btn.style.opacity = "1";
                            shuffle = 1;
                            
                            setList();
                            focus_cur();
                            $('.loader').fadeOut();
                        }
                    });
                }, 100);
            }
                
            else if (shuffle == 1)  {
                playerIndex = idx_list_.indexOf(idx_list[playerIndex]);
                
                idx_list = Object.assign([], idx_list_);
                thum_list = Object.assign([], thum_list_);
                title_list = Object.assign([], title_list_);
                artist_list = Object.assign([], artist_list_);
                
                shuffle_btn.style.opacity = "0.5";
                shuffle = 0;
                
                setList();
                focus_cur();
            }
        });
        
        // 현재 음악 포커스
        function focus_cur() {
            if ($('.get-songId').length == 0) return;
            
            let focu = $('.get-songId')[playerIndex]
            
            focu.scrollIntoView();
            focu.style.backgroundColor = "#bbccdd";
            focu.style.opacity = "0.7";
            focu.style.borderRadius = "5px";
            
            if (playerIndex != playerIndex_) {
                let focu_ = $('.get-songId')[playerIndex_]
                focu_.style.backgroundColor = "";
                focu_.style.opacity = "1";
                focu_.style.borderRadius = "0";
                playerIndex_ = playerIndex;
            }
        }
        
        // 더보기 버튼 클릭
        addmore_btn.addEventListener("click", () => {
            
        });
        
        // 창 닫기 이벤트
        window.addEventListener("unload", () => {
            opener.popClose()
        });
        
        //크기 고정
        window.addEventListener("resize", () => {
            window.resizeTo(1100, 800);
        });
		
	</script>
</body>
</html>